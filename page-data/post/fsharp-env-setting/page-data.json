{"componentChunkName":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js","path":"/post/fsharp-env-setting/","result":{"data":{"site":{"siteMetadata":{"title":"Wasuken Tech Blog","social":[{"name":"github","url":"https://github.com/wasuken/tech-blog"},{"name":"GitHub","url":"https://github.com/gatsbyjs"}]}},"blogPost":{"__typename":"MdxBlogPost","id":"7865e6b2-6b69-548d-adaf-77d4be8d5502","excerpt":"なにこれ EmacsおよびmacOSのF#設定記事。 途中からpackageを雑に紹介してるだけになってる。 端末情報とか install 実のところこれ一つで割といけるのでは。 軽くEmacs側の設定 こんぐらいでいいんじゃないんですかね。 はじめ、run-fsharp…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"F#の環境構築(Emacs)\",\n  \"slug\": \"/post/fsharp-env-setting\",\n  \"date\": \"2020-04-02T00:00:00.000Z\",\n  \"keywords\": [\"F#\", \"Emacs\", \"macOS\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"なにこれ\"\n  }, \"\\u306A\\u306B\\u3053\\u308C\"), mdx(\"p\", null, \"Emacs\\u304A\\u3088\\u3073macOS\\u306EF#\\u8A2D\\u5B9A\\u8A18\\u4E8B\\u3002\"), mdx(\"p\", null, \"\\u9014\\u4E2D\\u304B\\u3089package\\u3092\\u96D1\\u306B\\u7D39\\u4ECB\\u3057\\u3066\\u308B\\u3060\\u3051\\u306B\\u306A\\u3063\\u3066\\u308B\\u3002\"), mdx(\"h1\", {\n    \"id\": \"端末情報とか\"\n  }, \"\\u7AEF\\u672B\\u60C5\\u5831\\u3068\\u304B\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"$ dotnet --info\\n.NET Core SDK (reflecting any global.json):\\n Version:   3.1.100\\n Commit:    cd82f021f4\\n\\nRuntime Environment:\\n OS Name:     Mac OS X\\n OS Version:  10.14\\n OS Platform: Darwin\\n RID:         osx.10.14-x64\\n Base Path:   /usr/local/share/dotnet/sdk/3.1.100/\\n\\nHost (useful for support):\\n  Version: 3.1.0\\n  Commit:  65f04fb6db\\n\\n.NET Core SDKs installed:\\n  3.1.100 [/usr/local/share/dotnet/sdk]\\n\\n.NET Core runtimes installed:\\n  Microsoft.AspNetCore.App 3.1.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\\n  Microsoft.NETCore.App 3.1.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\\n\\nTo install additional .NET Core runtimes or SDKs:\\n  https://aka.ms/dotnet-download\\n\")), mdx(\"h1\", {\n    \"id\": \"install\"\n  }, \"install\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"$ brew install dotnet\\n\")), mdx(\"p\", null, \"\\u5B9F\\u306E\\u3068\\u3053\\u308D\\u3053\\u308C\\u4E00\\u3064\\u3067\\u5272\\u3068\\u3044\\u3051\\u308B\\u306E\\u3067\\u306F\\u3002\"), mdx(\"h1\", {\n    \"id\": \"軽くemacs側の設定\"\n  }, \"\\u8EFD\\u304FEmacs\\u5074\\u306E\\u8A2D\\u5B9A\"), mdx(\"p\", null, \"\\u3053\\u3093\\u3050\\u3089\\u3044\\u3067\\u3044\\u3044\\u3093\\u3058\\u3083\\u306A\\u3044\\u3093\\u3067\\u3059\\u304B\\u306D\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-emacs-lisp\"\n  }), \"(use-package lsp-mode\\n  :ensure t\\n  :config (setq lsp-prefer-flymake nil))\\n\\n(use-package fsharp-mode\\n  :defer t\\n  :ensure t\\n  :config\\n  (setq-default fsharp-indent-offset 2)\\n  (setq inferior-fsharp-program \\\"/usr/local/share/dotnet/dotnet fsi\\\")\\n  (add-hook 'fsharp-mode-hook '(lambda () (lsp))))\\n\")), mdx(\"p\", null, \"\\u306F\\u3058\\u3081\\u3001run-fsharp\\u6642\\u306Bfsharpi\\u304C\\u898B\\u3064\\u304B\\u3089\\u306A\\u3044\\u3088\\u301C\\u3063\\u3066\\u51FA\\u3066\\u304D\\u305F\\u3002\"), mdx(\"p\", null, \"\\u3069\\u3046\\u3084\\u3089\\u3001inferior-fsharp-program\\u306E\\u521D\\u671F\\u5024\\u306F\\u201Dfsharpi \\u2014readline-\\u201D\\u306E\\u3088\\u3046\\u3060\\u3002\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/fsharp/emacs-fsharp-mode/blob/14ae882821a91675bda9d9f622442ff341db04ae/inf-fsharp-mode.el#L40\"\n  }), \"\\u3053\\u3053\\u3089\\u8FBA\\u306B\\u3082\\u305D\\u3046\\u66F8\\u3044\\u3066\\u3042\\u308B\")), mdx(\"p\", null, \"\\u8ABF\\u3079\\u3066\\u307F\\u308B\\u3068fsharpi\\u306Fdotnet\\u5165\\u308C\\u305F\\u3060\\u3051\\u3067\\u306F\\u5C11\\u306A\\u304F\\u3068\\u3082PATH\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\u306B\\u306F\\u306A\\u3044\\u3002\"), mdx(\"p\", null, \"\\u306A\\u305C\\u306A\\u3089mono\\u3060\\u304B\\u3089\\u3002\\u305D\\u308A\\u3083\\u305D\\u3046\\u3060\\u3002\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/dotnet/docs/issues/10295\"\n  }), \"How does one install fsharpi? #10295\")), mdx(\"p\", null, \"\\u3055\\u3089\\u306B\\u8ABF\\u3079\\u3066\\u3001\\u201Cdotnet fsi\\u201D\\u3067\\u30A4\\u30F3\\u30BF\\u30D7\\u30EA\\u30BF\\u304C\\u8D77\\u52D5\\u3059\\u308B\\u307F\\u305F\\u3044\\u306A\\u306E\\u3067\"), mdx(\"p\", null, \"\\u305D\\u308C\\u3092inferior-fsharp-program\\u306B\\u5165\\u308C\\u3066\\u3084\\u308B\\u3068\"), mdx(\"p\", null, \"run-fsharp\\u6642\\u306B\\u53C2\\u7167\\u3057\\u3066\\u304F\\u308C\\u308B\\u3088\\u3046\\u306B\\u306A\\u3063\\u305F\\u3002\"), mdx(\"h1\", {\n    \"id\": \"これだけ？\"\n  }, \"\\u3053\\u308C\\u3060\\u3051\\uFF1F\"), mdx(\"p\", null, \"\\u3067\\u7D42\\u308F\\u308B\\u4E88\\u5B9A\\u3060\\u3063\\u305F\\u3051\\u3069\\u6D41\\u77F3\\u306B\\u6587\\u7AE0\\u3082\\u5185\\u5BB9\\u3082\\u7A1A\\u62D9\\u306A\\u4E0A\\u306B\\u30DC\\u30EA\\u30E5\\u30FC\\u30E0\\u3082\\u306A\\u3044\\u306E\\u306F\\u60B2\\u3057\\u3044\\u3002\"), mdx(\"p\", null, \"\\u65E5\\u672C\\u8A9E\\u30DA\\u30FC\\u30B8\\u306F\\u4E00\\u901A\\u308A\\u898B\\u305F\\u306E\\u3067\\u3001\\u82F1\\u8A9E\\u570F\\u306E\\u30B5\\u30A4\\u30C8\\u3092\\u3082\\u3046\\u5C11\\u3057\\u8ABF\\u3079\\u3066\\u307F\\u305F\\u3002\"), mdx(\"h2\", {\n    \"id\": \"formatter\"\n  }, \"formatter\"), mdx(\"p\", null, \"\\u3069\\u3046\\u3084\\u3089\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/fsprojects/fantomas\"\n  }), \"fsprojects/fantomas\"), \"\\n\\u3068\\u3044\\u3046\\u30C4\\u30FC\\u30EB\\u304C\\u3042\\u308B\\u3089\\u3057\\u3044\\u3002\"), mdx(\"p\", null, \"\\u8ABF\\u3079\\u308B\\u3068\\u4EE5\\u4E0B\\u306E\\u30B5\\u30A4\\u30C8\\u4F5C\\u6210\\u8005\\u306E\\u81EA\\u4F5C\\u95A2\\u6570\\u306B\\u4FBF\\u5229\\u306A\\u3082\\u306E\\u304C\\u3042\\u3063\\u305F\\u3002\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://zwild.github.io/posts/emacs-as-a-fsharp-ide-part1/\"\n  }), \"Emacs as a F# IDE (part1)\")), mdx(\"p\", null, \"\\u305D\\u306E\\u4E2D\\u3067\\u79C1\\u304C\\u4ECA\\u4F7F\\u3063\\u3066\\u308B\\u306E\\u304C\\u4EE5\\u4E0B\\u306E\\u95A2\\u6570\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-emacs-lisp\"\n  }), \"(defun fsharp-fantomas-format-region (start end)\\n  (interactive \\\"r\\\")\\n  (let ((source (shell-quote-argument (buffer-substring-no-properties start end)))\\n        (ok-buffer \\\"*fantomas*\\\")\\n        (error-buffer \\\"*fantomas-errors*\\\"))\\n    (save-window-excursion\\n      (shell-command-on-region\\n       start end (format \\\"fantomas --indent 2 --pageWidth 99 --stdin %s --stdout\\\" source)\\n       ok-buffer nil error-buffer)\\n      (if (get-buffer error-buffer)\\n          (progn\\n            (kill-buffer error-buffer)\\n            (message \\\"Can't format region.\\\"))\\n        (delete-region start end)\\n        (insert (with-current-buffer ok-buffer\\n                  (s-chomp (buffer-string))))\\n        (delete-trailing-whitespace)\\n        (message \\\"Region formatted.\\\")))))\\n\\n(defun fsharp-fantomas-format-buffer ()\\n  (interactive)\\n  (let ((origin (point)))\\n    (fsharp-fantomas-format-region (point-min) (point-max))\\n    (goto-char origin)))\\n\\n\")), mdx(\"p\", null, \"\\u3082\\u3061\\u308D\\u3093\\u3053\\u306E\\u95A2\\u6570\\u3092\\u4F7F\\u3046\\u306B\\u306F\\u3001\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/fsprojects/fantomas\"\n  }), \"fsprojects/fantomas\"), \"\\n\\u304C\\u5FC5\\u8981\\u306A\\u306E\\u3067\\u63A1\\u7528\\u3059\\u308B\\u5834\\u5408\\u306F\\u30A4\\u30F3\\u30B9\\u30C8\\u30FC\\u30EB\\u3057\\u3088\\u3046\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"$ dotnet tool install -g fantomas-tool\\n\")), mdx(\"p\", null, \"\\u3061\\u306A\\u307F\\u306B\\u3001\\u79C1\\u306F\\u4EE5\\u4E0B\\u306E\\u3088\\u3046\\u306A\\u30B7\\u30E7\\u30FC\\u30C8\\u30AB\\u30C3\\u30C8\\u767B\\u9332\\u3057\\u3066\\u3044\\u308B\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-emacs-lisp\"\n  }), \"(define-key fsharp-mode-map (kbd \\\"C-c C-M-f\\\") #'fsharp-fantomas-format-buffer)\\n\")), mdx(\"p\", null, \"\\u7D39\\u4ECB\\u3057\\u305F\\u30B5\\u30A4\\u30C8\\u306B\\u306F\\u4ED6\\u306B\\u3082\\u4FBF\\u5229\\u306A\\u95A2\\u6570\\u3092\\u7D39\\u4ECB\\u3055\\u308C\\u3066\\u308B\\u306E\\u3067\\u8A66\\u3057\\u3066\\u307F\\u308B\\u3068\\u3044\\u3044\\u304B\\u3082\\u3002\"), mdx(\"h2\", {\n    \"id\": \"dotnet-mode\"\n  }, \"dotnet-mode\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/julienXX/dotnet.el\"\n  }), \"julienXX/dotnet.el\")), mdx(\"p\", null, \"\\u3053\\u308C\\u306A\\u3093\\u3067\\u3059\\u3051\\u3069\\u306D\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-emacs-lisp\"\n  }), \"(use-package dotnet\\n  :ensure t\\n  :config\\n  (add-hook 'fsharp-mode-hook #'dotnet-mode))\\n\")), mdx(\"p\", null, \"\\u6700\\u4F4E\\u9650\\u3053\\u308C\\u304F\\u3089\\u3044\\u8A2D\\u5B9A\\u3057\\u3066\\u3084\\u308C\\u3070\\u3001C-c C-n\\u304B\\u3089\\u6D3E\\u751F\\u3059\\u308B\\u30B3\\u30DE\\u30F3\\u30C9\\u3067\\u8272\\u3005\\u3067\\u304D\\u3061\\u3083\\u3046\\u3002\"), mdx(\"h1\", {\n    \"id\": \"100蛇足\"\n  }, \"100%\\u86C7\\u8DB3\"), mdx(\"p\", null, \"\\u30A2\\u30C9\\u30AB\\u30EC\\u3068\\u304B\\u53C2\\u52A0\\u3067\\u304D\\u306A\\u304B\\u3063\\u305F\\u3002F#\\u59CB\\u3081\\u305F\\u9803\\u306B\\u306F\\u65E2\\u306B\\u7D42\\u308F\\u3063\\u3066\\u305F\\u3002\"), mdx(\"p\", null, \"\\u6B8B\\u5FF5:<\"), mdx(\"h1\", {\n    \"id\": \"参考サイト\"\n  }, \"\\u53C2\\u8003\\u30B5\\u30A4\\u30C8\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.microsoft.com/ja-jp/dotnet/fsharp/get-started/get-started-command-line\"\n  }), \".NET Core CLI \\u306EF#\\u4F7F\\u7528\\u3092\\u958B\\u59CB\\u3059\\u308B\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/fsharp/emacs-fsharp-mode\"\n  }), \"fsharp/emacs-fsharp-mode\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://devblogs.microsoft.com/dotnet/announcing-f-4-7/\"\n  }), \"Announcing F# 4.7\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://zwild.github.io/posts/emacs-as-a-fsharp-ide-part1/\"\n  }), \"Emacs as a F# IDE (part1)\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/fsprojects/fantomas\"\n  }), \"fsprojects/fantomas\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/julienXX/dotnet.el\"\n  }), \"julienXX/dotnet.el\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/fsharp/emacs-fsharp-mode/blob/14ae882821a91675bda9d9f622442ff341db04ae/inf-fsharp-mode.el#L40\"\n  }), \"\\u3053\\u3053\\u3089\\u8FBA\\u306B\\u3082\\u305D\\u3046\\u66F8\\u3044\\u3066\\u3042\\u308B\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/dotnet/docs/issues/10295\"\n  }), \"How does one install fsharpi? #10295\")));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/post/fsharp-env-setting/","title":"F#の環境構築(Emacs)","tags":[],"keywords":["F#","Emacs","macOS"],"date":"April 02, 2020"},"previous":null,"next":null},"pageContext":{"id":"7865e6b2-6b69-548d-adaf-77d4be8d5502"}}}